#include "Header.h"
int main()
{
	setlocale(LC_ALL, "Rus");
	int size_mas; //размерность массива
	int a, b, c = 9, pv=0; // a и b - границы генерируемых чисел для массива; c и pv - счетчики
	int sort, kach; //выбор метода сортировки и качества массива
	//задание размерности массива
	printf("Введите размерность массива:");
	//проверка на коректность ввода
	if ((scanf("%d", &size_mas)) == 0) {
		printf("Введено значение не типа int или слишком большое");
		return 1;
	}
	//задание пределов генерируемых чисел
	printf("Введите пределы чисел в массиве(пример 0 100):");
	//проверка на коректность ввода
	if ((scanf("%d%d", &a, &b)) == 0)
	{
		printf("Это не целочислительные значения");
		return 4;
	}
	//выбор типа сортировки
	printf("Выберите тип сортировки:\n1. Сортировка простыми включениями (простой вставкой)\n2. Сортировка методом пузырька (простым обменом)\n");
	scanf("%d", &sort);
	//проверка на коректность ввода
	if (sort == 1 || sort == 2)
		;
	else {
		printf("Такого пункта нет");
		return 2;
	}
	//выбор качества массива
	printf("Выберите качество алгоритма:\n1. Числа расположены случайным образом\n2. Массив отсортирован по восзрастанию\n3. Массив отсортирован по убыванию\n");
	scanf("%d", &kach);
	//проверка на коректность ввода
	if (kach == 1 || kach == 2 || kach == 3)
		;
	else {
		printf("Такого пункта нет");
		return 3;
	}
	//создание динамических массивов
	int* mas = (int*)malloc(sizeof(int) * size_mas);
	int* mas_2 = (int*)malloc(sizeof(int) * size_mas);
	//заполнения массива
	generation_massiv(mas, a, b, sort, kach, size_mas);
	//в зависимости от качества массива он будет заранее отсортирован(2-по возрастанию, 3-по убыванию)
	if (kach == 2) {
		quicksort(mas, 0, size_mas - 1);
	}
	if (kach == 3) {
		sort_ubl(mas, size_mas);
	}
	//заполнение второго массива
	for (int i = 0; i < size_mas; i++)
	{
		mas_2[i] = mas[i];
	}
	//выведение изначального массива
	printf("Сгенерированный массив\n");
	for (int i = 0; i < size_mas; i++)
	{
		printf("%d ", mas[i]);
		if (i % c == 0)
			if (i != 0) {
				printf("\n");
			}
		if (i == 11)
			c++;
	}
	//сортировка массива выбраным методом(1-вставка, 2-пузырьком)
	if (sort == 1)
	{
		vstavka(mas, size_mas, pv);
		pv = 1;
	}
	else
	{
		puzir(mas, size_mas, pv);
		pv = 1;
	}
	//сортировка второго массива другим способо(если вы выбрали пузырек, тот тут вставка. это для показа разницы в количестве операций)
	if (sort == 2)
	{
		vstavka(mas_2, size_mas, pv);
	}
	else
	{
		puzir(mas_2, size_mas, pv);
	}
	return 0;
}